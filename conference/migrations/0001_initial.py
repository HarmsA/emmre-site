# Generated by Django 3.1.5 on 2021-03-04 15:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('media', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('company', models.CharField(blank=True, max_length=150, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True)),
                ('img', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agents', to='media.image')),
            ],
            options={
                'ordering': ('last_name',),
            },
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('cancel_refund', models.TextField()),
                ('basic_conference', models.TextField()),
                ('all_access_conference', models.TextField()),
                ('is_active', models.BooleanField(default=False)),
                ('register_url', models.URLField(blank=True, null=True)),
                ('agents', models.ManyToManyField(related_name='conference_agents', to='conference.Agent', verbose_name='Agent')),
            ],
        ),
        migrations.CreateModel(
            name='ConferenceSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField()),
                ('published_status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('pending_review', 'Pending Review')], max_length=30)),
                ('visibility', models.BooleanField(default=True)),
                ('date_published', models.DateTimeField()),
                ('difficulty_level', models.CharField(blank=True, choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('pitch_slam_participants', 'Pitch Slam Participants'), ('all_levels', 'All Levels'), ('general', 'General')], max_length=30)),
                ('is_featured', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True)),
                ('conference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conference_sessions', to='conference.conference')),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('conference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conference_registration', to='conference.conference')),
            ],
            options={
                'unique_together': {('title', 'conference')},
            },
        ),
        migrations.CreateModel(
            name='SessionTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=75, null=True, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('css', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, choices=[('codemirror', 'codemirror'), ('conference', 'conference'), ('images', 'images'), ('jqueryui', 'jqueryui'), ('novel_writers_digest_conference', 'novel_writers_digest_conference'), ('tinymce', 'tinymce'), ('writers_digest_conference', 'writers_digest_conference')], max_length=255, null=True, unique=True, verbose_name='folder')),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('website', models.URLField(blank=True, max_length=255, null=True)),
                ('img', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sponsors', to='media.image')),
            ],
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_keynote', models.BooleanField(default=False)),
                ('keynote_type', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True)),
                ('img', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='speakers', to='media.image')),
            ],
        ),
        migrations.CreateModel(
            name='SessionSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_schedules', to='conference.conferencesession')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_schedules', to='conference.sessiontopic')),
            ],
            options={
                'unique_together': {('session', 'topic', 'start', 'end')},
            },
        ),
        migrations.CreateModel(
            name='PitchSlam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('conference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conference_pitchslam', to='conference.conference')),
                ('imgs', models.ManyToManyField(blank=True, related_name='pitchslam', to='media.Image')),
            ],
        ),
        migrations.CreateModel(
            name='NavLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='navlinks', to='conference.conference')),
            ],
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('link', models.CharField(blank=True, max_length=100, null=True)),
                ('is_header', models.BooleanField(default=True)),
                ('is_footer', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='conference.menuitem')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='site_menu_item', to='conference.site')),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, max_length=255, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('conference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conference_faq', to='conference.conference')),
            ],
        ),
        migrations.CreateModel(
            name='Exhibitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('website', models.URLField(blank=True, max_length=255, null=True)),
                ('img', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exhibitors', to='media.image')),
            ],
        ),
        migrations.AddField(
            model_name='conferencesession',
            name='speakers',
            field=models.ManyToManyField(blank=True, related_name='conference_sessions', to='conference.Speaker', verbose_name='Speakers'),
        ),
        migrations.AddField(
            model_name='conferencesession',
            name='sponsors',
            field=models.ManyToManyField(blank=True, related_name='conference_sessions', to='conference.Sponsor', verbose_name='Sponsors'),
        ),
        migrations.AddField(
            model_name='conferencesession',
            name='topics',
            field=models.ManyToManyField(related_name='conference_sessions', through='conference.SessionSchedule', to='conference.SessionTopic'),
        ),
        migrations.CreateModel(
            name='ConferenceContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=25, null=True)),
                ('title', models.CharField(blank=True, max_length=25, null=True)),
                ('contact_for', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.PositiveBigIntegerField(blank=True, null=True)),
                ('novel', models.BooleanField(default=True)),
                ('annual', models.BooleanField(default=True)),
                ('conference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conference_contact', to='conference.conference')),
            ],
        ),
        migrations.CreateModel(
            name='ConferenceAddOn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField()),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conference_AddOns', to='conference.conference')),
            ],
        ),
        migrations.AddField(
            model_name='conference',
            name='exhibitor',
            field=models.ManyToManyField(related_name='conference_exhibitor', to='conference.Exhibitor', verbose_name='Exhibitor'),
        ),
        migrations.AddField(
            model_name='conference',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conferences', to='conference.site'),
        ),
        migrations.AddField(
            model_name='conference',
            name='sponsors',
            field=models.ManyToManyField(related_name='conference_sponsors', to='conference.Sponsor', verbose_name='Sponsor'),
        ),
        migrations.AddField(
            model_name='agent',
            name='topic',
            field=models.ManyToManyField(blank=True, related_name='agent_topics', to='conference.SessionTopic'),
        ),
        migrations.CreateModel(
            name='RegistrationTimeFrame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.IntegerField(blank=True, null=True)),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('registration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='time_frames', to='conference.registrationoption')),
            ],
            options={
                'unique_together': {('registration', 'start', 'end')},
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('text', models.TextField(blank=True, null=True)),
                ('title', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('excerpt', models.TextField(blank=True, null=True, verbose_name='Intro for link')),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='conference.conference')),
                ('img', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='media.image')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='conference.page')),
            ],
            options={
                'unique_together': {('conference', 'title'), ('conference', 'slug')},
            },
        ),
    ]
